@page "/"
@using karma.Data
@inject DialogService _dialogService
@implements IDisposable

<h1>Charities</h1>

<RadzenButton Text="Add charity" style="float:right;" Click="@OpenDialog" />

@if (_charities == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Added</th>
                <th>Website</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var charity in _charities)
            {
                <tr>
                    <td>@charity.Name</td>
                    <td>@charity.Description</td>
                    <td>@charity.Added.ToShortDateString()</td>
                    <td>@charity.Website</td>
                </tr>
            }
        </tbody>
    </table>
}

@code
{
    private readonly List<Charity> _charities = new();

    protected override void OnInitialized()
    {
        _dialogService.OnOpen += Open;
        _dialogService.OnClose += Close;
    }

    public void Dispose()
    {
        _dialogService.OnOpen -= Open;
        _dialogService.OnClose -= Close;
    }

    void Open(string title, Type type, Dictionary<string, object> parameters, DialogOptions options)
    {
        // do nothing
    }

    void Close(dynamic result)
    {
        // Parse tuple from result
        Tuple<bool, Charity> resultTuple = result;
        var status = resultTuple.Item1;
        var charity = resultTuple.Item2;

        // Add charity to database, if submitted
        if (status)
        {
            CharityService.AddCharityToDataBase(charity);
            charity.Added = DateTime.Now;
            _charities.Add(charity);
        }
    }

    public async Task OpenDialog()
    {
        await _dialogService.OpenAsync<Modal>
        (
        "Enter a new charity",
        new Dictionary<string, object>(),
        new DialogOptions { Width = "700px", Height = "530px" }
        );
    }
}