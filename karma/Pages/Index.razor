@page "/"

@using karma.Data
@using System.Timers
@inject CharityService CharityService

<h1>Charities</h1>

<RadzenButton Text="Add charity" style="float:right;"></RadzenButton>

@if (charities == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Added</th>
                <th>Website</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var charity in charities)
            {
                <tr>
                    <td>@charity.Name</td>
                    <td>@charity.Description</td>
                    <td>@charity.Added.ToShortDateString()</td>
                    <td>@charity.Website</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Charity> charities;
    /*
    protected override async Task OnInitializedAsync()
    {
        charities = await CharityService.GetCharitiesAsync(DateTime.Now);
    }

    async Task ShowModal()
    {

        var options = new ModalOptions()
        {
            //Position = ModalPosition.Center
            DisableBackgroundCancel = true
        };
        var formModal = Modal.Show<Modal>("Add charity", options);
        var result = await formModal.Result;

        if (result.Cancelled)
        {
            Console.WriteLine("Modal was cancelled");
        }
        else
        {
            Charity charity = (Charity) result.Data;
            karma.Data.CharityService.AddCharityToDataBase(charity);
            
            charity.Added = DateTime.Now;
            charities.Add(charity);
        }
    }

    */
}
